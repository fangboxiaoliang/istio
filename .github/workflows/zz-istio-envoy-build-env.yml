name: istio-envoy-build-env
"on":
  push:
    paths:
      - .github/workflows/zz-istio-envoy-build-env.yml
      - build/istio-envoy-build-env/Dockerfile.istio-envoy-build-env
      - build/istio-envoy-build-env/.version
      - build/istio-envoy-build-env/Makefile
jobs:
  istio-envoy-build-env:
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    runs-on:
      - "self-hosted"
      - ${{ matrix.arch }}
    defaults:
      run:
        working-directory: build/istio-envoy-build-env
    outputs:
      image: ${{ steps.prepare.outputs.image }}
      arch: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        name: Login ghcr.io
        with:
          password: ${{ secrets.CR_PAT }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
      - uses: docker/login-action@v1
        name: Login docker.io
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
      - id: prepare
        name: Prepare
        env:
          NAME: istio-envoy-build-env
          QEMU_DISABLED: "true"
        run: |-
          echo ::set-output name=image_suffix::-${{ matrix.arch }}
          echo ::set-output name=target_platforms::linux/${{ matrix.arch }}

          GITHUB_SHA=${{ github.sha }}
          GITHUB_REF=${{ github.ref }}

          if [[ ${GITHUB_REF} != "refs/heads/master" ]]; then
            export TAG=sha-${GITHUB_SHA::7}
          fi

          make prepare
      - uses: docker/build-push-action@v2
        name: Build & May Push
        with:
          build-args: ${{ steps.prepare.outputs.build_args }}
          context: build/istio-envoy-build-env
          file: build/istio-envoy-build-env/Dockerfile.istio-envoy-build-env
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: ${{ steps.prepare.outputs.target_platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |-
            ghcr.io/querycap/istio/${{ steps.prepare.outputs.image }}${{ steps.prepare.outputs.image_suffix }}
            docker.io/querycapistio/${{ steps.prepare.outputs.image }}${{ steps.prepare.outputs.image_suffix }}
  istio-envoy-build-env-combine:
    if: ${{ github.event_name != 'pull_request' }}
    needs:
      - istio-envoy-build-env
    runs-on:
      - ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        name: Login ghcr.io
        with:
          password: ${{ secrets.CR_PAT }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
      - uses: docker/login-action@v1
        name: Login docker.io
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
      - name: Combine
        env:
          HUB: ghcr.io/querycap/istio docker.io/querycapistio
          IMAGE: ${{ needs.istio-envoy-build-env.outputs.image }}
          QEMU_DISABLED: "true"
          TARGET_ARCH: amd64 arm64
        run: |-
          echo "${{ needs.istio-envoy-build-env.outputs.arch }}"
          for h in ${HUB}; do
            SOURCES=""
            for arch in ${TARGET_ARCH}; do
              SOURCES="${SOURCES} ${h}/${IMAGE}-${arch}"
            done

            docker buildx imagetools create -t ${h}/${IMAGE} ${SOURCES};
            docker buildx imagetools inspect ${h}/${IMAGE};
          done
